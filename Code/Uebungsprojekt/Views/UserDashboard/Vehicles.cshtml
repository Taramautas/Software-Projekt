@model IEnumerable<Uebungsprojekt.Models.Vehicle>
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@{
    ViewData["Title"] = "Vehicles";
    Layout = "_Layout";
}

<h1 class="page-title">@ViewData["Title"]</h1>

<div class="row">
    <div class="col-12">
        <abbr title="Create new Vehicle">
            <a class="submit" asp-area="" asp-controller="UserDashboard" asp-action="CreateVehicle">
                <span class="material-icons">add_to_photos</span>
            </a>
        </abbr>
    </div>
</div>

@if (Model != null)
{
    @if (Model.Any())
    {
        <table id="booking-table" style="width:100%; text-align: center" class="table table-hover">
            <thead class="thead-light">
                <tr>
                    <th>ID</th>
                    <th>Model</th>
                    <th>Capacity in kWh</th>
                    <th>Connector Types</th>
                    @if ((await AuthorizationService.AuthorizeAsync(User, "Assistant")).Succeeded)
                    {
                        <th>User</th>
                    }
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var vehicle in Model)
                {
                    <tr>
                        <td>@vehicle.id</td>
                        <td>@vehicle.model_name</td>
                        <td>@vehicle.capacity</td>
                        @{ ConnectorType last_type = vehicle.connector_types.Last();}
                        <td>
                            @foreach (var conntype in vehicle.connector_types)
                            {
                                if (!conntype.Equals(last_type))
                                {
                                    // For spacing - not working good because of the used font
                                    string str = new string(' ', 20 - conntype.ToString().Length) + "| ";
                                    @(conntype + str)
                                }
                                else
                                {@(conntype.ToString())}
                            }
                        </td>
                        @if ((await AuthorizationService.AuthorizeAsync(User, "Assistant")).Succeeded)
                        {
                            @if (vehicle.user != null)
                            {
                                <td>@vehicle.user.email</td>
                            }
                        }
                        <td><a href="@Url.Action("DeleteVehicle","UserDashboard", new{id=vehicle.id})" id="delete_btn_uitest"><span class="material-icons">cancel</span></a>
                        @*@Html.ActionLink("Delete", "DeleteVehicle", new { id = vehicle.id })*@</td>
                    </tr>
                }

            </tbody>
        </table>
    }
    else
    {
        <h4>There are no vehicles to display!</h4>
    }
}
else
{
    <h4>There are no vehicles to display!</h4>
}