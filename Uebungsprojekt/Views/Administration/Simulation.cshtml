@{
    ViewData["Title"] = "Simulation";
    Layout = "_PlanerLayout";
}

<h1 class="page-title">@ViewData["Title"]</h1>
<div class="row">
    <div class="col-sm-12">
        <div class="row submit">
            <abbr title="ExportSimulationResult">
                <a class="btn btn-outline-primary ml-1 submit" asp-area="" asp-controller="Administration" asp-action="ExportSimulationResult"><span class="material-icons">get_app</span></a>
            </abbr>
        </div>
    </div>
</div>
<div class="container">
    <div class="col-sm-12">
        <h2><i>Simulation Data</i></h2><br />
    </div>
    <div class="row">
        <div class="col-sm-3">
            Tick:
        </div>
        <div class="col-sm-9">
            <div id="liveticks">0 out of 100</div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-3">
            Current time in Simulation:
        </div>
        <div class="col-sm-9">
            <div id="time"> </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-3">
            Minutes per Tick:
        </div>
        <div class="col-sm-9">
            15
        </div>
    </div>
</div>
<br />
<table id="booking-table" style="width:100%" class="table table-striped table-hover">
    <thead>
        <tr>
            <th>Location</th>
            <th>Total amount of charging stations</th>
            <th>Current Workload</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <!-- for with data -->
            <td>Ludwigsburg Film- und Medien-Zentrum (Headquarter)</td>
            <td>2</td>
            <td>50%</td>
        </tr>
    </tbody>
</table>

<br />
<div class="row">
    <div class="col-sm-12">
        <abbr title="See Results">
            <a class="btn btn-outline-primary ml-1 submit" asp-area="" asp-controller="Administration" asp-action="SimulationEvaluation"><span class="material-icons">show_chart</span></a>
        </abbr>
    </div>
</div>
<script>
    // Update Ticks
    function liveTicks(i) {
        myVar = setTimeout(function () {
            x.innerHTML = i + " out of 100"; console.log(i)
            if (i == 100) {
                clearTimeout(myVar);
                return;
            }
            liveTicks(i + 1)
        }, 2000)
    }

    var x = document.getElementById("liveticks");
    var i = 1;
    liveTicks(i); 

    // Update Date, Time
    function updateClock() {
        var now = new Date(), // current date
            months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']; // you get the idea
        var day = (now.getDate() < 10 ? '0' : '') + now.getDate(); 
        var seconds = (now.getSeconds() < 10 ? '0' : '') + now.getSeconds();
        var minutes = (now.getMinutes() < 10 ? '0' : '') + now.getMinutes();
        var hours = (now.getHours() < 10 ? '0' : '') + now.getHours(); 
        time = hours + ':' + minutes + ':' + seconds,

            // a cleaner way than string concatenation
            date = [day,
            months[now.getMonth()],
            now.getFullYear()].join(' ');

        // set the content of the element with the ID time to the formatted string
        document.getElementById('time').innerHTML = [date, time].join(', ');

        // call this function again in 1000ms
        setTimeout(updateClock, 1000);
    }
    updateClock();
</script>