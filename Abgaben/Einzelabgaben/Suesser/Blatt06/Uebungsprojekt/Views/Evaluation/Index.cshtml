@model IEnumerable<Uebungsprojekt.ViewModel.ConnectorTypeEvaluationViewModel>

@{
    ViewData["Title"] = "Home Page";
}


<<<<<<< HEAD
=======
<a class="btn btn-primary float-right" asp-area="" asp-controller="Evaluation" asp-action="Export">Export</a>


>>>>>>> ef14370eec46d7e75c2d68be9936f6f5d4f87c1f
<table style="width:100%" class="table table-striped table-hover">
    <thead>
        <tr>
            <th>Type</th>
            <th>Percentage</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var Evaluation in Model)
        {
            <tr>
                <td>@Evaluation.type</td>
                <td>@Evaluation.percentage</td>
            </tr>
        }
    </tbody>
</table>
<<<<<<< HEAD
<br /><br />
<h3>Q&A</h3>

<p>• Welchen Vorteil bietet die Einführung von ViewModels?</p>
<p>ViewModels enthalten genau die benötigten Daten für die View.
    Kombination verschiedener Models ist leicht umzusetzten. Schrumpfen eines
    komplexten Models für die view ebenfalls umsetzbar</p><br />
=======
<br />
<br />
<h3>Q&A</h3>

<p>• Welchen Vorteil bietet die Einführung von ViewModels?</p>
<p>
    ViewModels enthalten genau die benötigten Daten für die View.
    Kombination verschiedener Models ist leicht umzusetzten. Schrumpfen eines
    komplexten Models für die view ebenfalls umsetzbar
</p>
<br />
>>>>>>> ef14370eec46d7e75c2d68be9936f6f5d4f87c1f

<p>• Hätte dies auch ohne ViewModel gelöst werden können?</p>
<p> Ja. Man müsste verschiedene schleifen erstellen, welche die Buchungen durchiterieren und in Listen festhalten wie of welcher Steckertyp benutzt wurde.</p>
